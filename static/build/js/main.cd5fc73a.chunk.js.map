{"version":3,"sources":["providers/UserProvider.jsx","components/Navbar.jsx","components/Advertisement.jsx","components/Events.jsx","components/Question.jsx","components/Pagination.jsx","components/Leaderboard.jsx","components/Contactus.jsx","components/Rules.jsx","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","Navbar","props","state","expanded","this","setState","prev","context","username","sticky","collapseOnSelect","expand","bg","variant","onToggle","toggleNav","bind","to","Brand","Toggle","Collapse","style","float","onClick","className","activeClassName","exact","href","event","preventDefault","UserProvider","Consumer","points","Component","Advertisement","backgroundColor","opacity","behavour","direction","color","Events","scope","override","css","Question","stuck_open","hint_open","fetching","submitted","question","hint","image","answer","message","answerSubmitHandler","fetch","then","res","json","data","catch","err","console","log","skips","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","method","headers","csrf","resp","next_question","setSkips","id","onSubmit","skip","disabled","FormData","append","target","ans","value","body","status","update_points","footer","Fragment","current_question","fontSize","textAlign","src","height","width","alt","render_hint","onChange","type","placeholder","name","length","button_text","toggle_stuck","render_skip","render_question","contextType","CustomPagination","page","items","i","push","Pagination","Item","active","changePage","key","number_of_pages","Leaderboard","leaderboard","NUMBER_OF_ITEMS","map","topper","index","registration_number","slice","change_page","reloadLeaderboard","render_leaderbord","ContactUs","Rules","listStyleType","App","loading","first_name","last_name","email","phone","getCookie","go_to_next_question","cookieValue","document","cookie","cookies","split","trim","substring","decodeURIComponent","response","alert","size","Provider","path","render","Contactus","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uVAMeA,EAHGC,IAAMC,gB,QCGHC,E,kDAEjB,WAAYC,GACX,IAAD,8BACI,cAAMA,IACDC,MAAM,CACPC,UAAS,GAHjB,E,wDASIC,KAAKC,UAAS,SAACC,GACX,MAAO,CAACH,UAAUG,EAAKH,e,qCAIhBI,GAEX,OACI,8BACKA,EAAQC,Y,+BAKpB,IAAD,OACI,OAEI,kBAAC,IAAD,CAAcC,OAAO,MAAMC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAOV,SAAUC,KAAKF,MAAMC,SAAUW,SAAU,kBAAI,EAAKC,UAAUC,KAAK,EAApB,KAC1H,kBAAC,OAAD,CAAMC,GAAG,UACT,kBAAC,IAAaC,MAAd,yDAGA,kBAAC,IAAaC,OAAd,MAEA,kBAAC,IAAaC,SAAd,CAAwBC,MAAO,CAACC,MAAM,SAAUC,QAAS,kBAAI,EAAKR,UAAUC,KAAK,EAApB,KAErD,wBAAIQ,UAAU,sCACd,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACT,GAAG,SAASO,UAAU,YAA9D,SAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASC,gBAAgB,SAAUC,OAAK,EAACT,GAAG,cAAcO,UAAU,YAApE,UAGJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASC,gBAAgB,SAAUC,OAAK,EAACT,GAAG,oBAAqBO,UAAU,YAA3E,iBAIJ,wBAAIA,UAAU,+BACd,wBAAIA,UAAU,YACd,uBAAIG,KAAK,UAAWH,UAAU,YAA9B,YAGJ,wBAAIA,UAAU,uCACV,wBAAIA,UAAU,YACd,uBAAGG,KAAK,IAAIJ,QAAS,SAACK,GAAD,OAASA,EAAMC,kBAAkBL,UAAU,YAC5D,kBAACM,EAAaC,SAAd,MACK,SAACxB,GAAD,OAAW,6CAAmBA,EAAQyB,aAK/C,wBAAIR,UAAU,YACd,kBAAC,IAAD,CAASC,gBAAgB,SAAUC,OAAK,EAACT,GAAG,aAAcO,UAAU,YAApE,sB,GAnEYS,aCUrBC,EAbO,WAEd,OACI,yBAAKb,MAAO,CAACc,gBAAiB,UAAWC,QAAS,IAC9C,yBAAKZ,UAAU,UACf,6BAASa,SAAS,SAASC,UAAU,OAAOjB,MAAO,CAACkB,MAAM,UAAU,2CAAgB,0BAAMlB,MAAO,CAACkB,MAAO,YAArB,kBAAhB,yFCkDrEC,E,uKApDP,OACI,yBAAKhB,UAAU,yCACf,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iDAAiDH,MAAO,CAACe,QAAS,KAC7E,wBAAIZ,UAAU,eAAd,gBAEI,2BAAOA,UAAU,SACb,2BAAOA,UAAU,cACb,4BACM,wBAAIiB,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,wBAIR,+BACI,4BACI,yCACA,qDAEJ,wBAAIjB,UAAU,kBACV,yCACA,qDAEJ,4BACI,yCACA,oEAEJ,wBAAIA,UAAU,kBACV,yCACA,qDAGpB,4BACA,8CACA,oEAGA,wBAAIA,UAAU,kBACd,sCACA,8E,GA3CKS,a,6LCQrB,IAAMS,EAAWC,cAAH,KAUOC,E,kDAEjB,WAAY3C,GACX,IAAD,8BACI,cAAMA,IACDC,MAAM,CACP2C,YAAW,EACXC,WAAU,EACVC,UAAS,EACTC,WAAU,EACVC,SAAS,GACTC,KAAK,GACLC,MAAM,GACNC,OAAO,GACPC,QAAQ,IAGZ,EAAKC,oBAAoB,EAAKA,oBAAoBtC,KAAzB,gBAd7B,E,gEAmBC,IAAD,OACIuC,MAAM,qBACLC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACAA,EAAKV,SAEJ,EAAK5C,SAAS,CACV4C,SAASU,EAAKV,SAASA,SACvBC,KAAKS,EAAKV,SAASC,KACnBC,MAAMQ,EAAKV,SAASE,MACpBJ,UAAS,IAMb,EAAK1C,SAAS,CACV4C,SAAS,KACTC,KAAK,KACLC,MAAM,KACNE,QAAQM,EAAKN,QACbN,UAAS,OAKpBa,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,Q,qCAK1BzD,KAAKC,UAAS,SAACC,GACX,MAAO,CACHuC,YAAYvC,EAAKuC,iB,6BAM5B,IAAD,OACOzC,KAAKG,QAAQyD,MAAM,EACjBC,IAAKC,KAAK,CACPC,MAAO,gDACPC,KAAM,6CACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,QAEtBjB,MAAK,SAACC,GACAA,EAAIiB,aAEHnB,MAAM,YAAY,CACdoB,OAAO,OACPC,QAAQ,CAAC,cAAc,EAAKrE,QAAQsE,QAEvCrB,MAAK,SAACsB,GAAD,OAAQA,EAAKpB,UAClBF,MAAK,SAACG,GACH,GAAGA,EAAKoB,cACR,CACI,IAAI9B,EAASU,EAAKoB,cAClB,EAAK1E,SAAS,CACV4C,SAASA,EAASA,SAClBC,KAAKD,EAASC,KACdC,MAAMF,EAASE,QAEjB,WACE,EAAK5C,QAAQyE,SAASrB,EAAKK,OAC3B,EAAKzD,QAAQwE,wBAQjBjB,QAAQC,IAAIJ,GACZ,EAAKtD,SAAS,CACV4C,SAAS,KACTC,KAAK,KACLC,MAAM,KACNE,QAAQM,EAAKN,UACf,WACE,EAAK9C,QAAQyE,SAASrB,EAAKK,OAC3B,EAAKzD,QAAQwE,yBAWjCd,IAAKC,KAAK,CACNC,MAAM,gDACNE,KAAK,Y,oCASZ,IAAD,OACQ,OAAIjE,KAAKF,MAAM2C,WAGP,0BAAMoC,GAAG,YAAYC,SAAU,SAACtD,GAAD,OAASA,EAAMC,mBAI1C,4BAAQL,UAAU,iBAAiBD,QAAS,kBAAI,EAAK4D,QAAQC,SAAUhF,KAAKF,MAAM8C,WAAkC,IAArB5C,KAAKG,QAAQyD,OAE5G,8BAAO5D,KAAKG,QAAQyD,MAApB,sBAUJ,gC,oCAShB,OAAG5D,KAAKF,MAAM4C,UAGN,yBAAKmC,GAAG,QACJ,wBAAI5D,MAAO,CAACkB,MAAO,UAAWnC,KAAKF,MAAMgD,MACzC,8BAQJ,gC,0CAKQtB,GACnB,IAAD,OACIA,EAAMC,iBACNzB,KAAKC,SAAS,CAAC2C,WAAU,IACzB,IAAIW,EAAK,IAAI0B,SAEb1B,EAAK2B,OAAO,SAAS1D,EAAM2D,OAAOC,IAAIC,OAEtClC,MAAM,oBAAoB,CACtBoB,OAAO,OACPe,KAAK/B,EACLiB,QAAQ,CAAC,cAAcxE,KAAKG,QAAQsE,QAEvCrB,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACc,YAAdA,EAAKgC,OAIJ1B,IAAKC,KAAK,CACNC,MAAM,kBACNE,KAAK,YAGRb,MAAK,WACqB,MAApBG,EAAKoB,eAEJ,EAAKxE,QAAQwE,gBACb,EAAKxE,QAAQqF,cAAcjC,EAAK3B,QAEhC,EAAK3B,SAAS,CACV4C,SAASU,EAAKoB,cAAc9B,SAC5BC,KAAKS,EAAKoB,cAAc7B,KACxBC,MAAMQ,EAAKoB,cAAc5B,MACzBC,OAAO,GACPJ,WAAU,MAMd,EAAKzC,QAAQwE,gBACb,EAAKxE,QAAQqF,cAAcjC,EAAK3B,QAEhC,EAAK3B,SAAS,CACV4C,SAAS,KACTC,KAAK,KACLC,MAAM,KACNC,OAAO,KACPC,QAAQM,EAAKN,QACbL,WAAU,QASJ,UAAdW,EAAKgC,QAET1B,IAAKC,KAAK,CACNC,MAAM,gBACNE,KAAK,UAET,EAAKhE,SAAS,CAAC2C,WAAU,KAIzBiB,IAAKC,KAAK,CACNC,MAAMR,EAAKgC,OACXtB,KAAK,UACLwB,OAAO,yDAIlBjC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,Q,oCAOtB,OAAGzD,KAAKF,MAAM8C,UAAmB,0CACpB,0C,wCAIpB,IAAD,OACI,OAAI5C,KAAKF,MAAM6C,SA0DP,6BACI,kBAAC,IAAD,CAAaJ,IAAKD,KAzDvBtC,KAAKF,MAAM+C,SAGN,kBAAC,IAAM6C,SAAP,KACA,yBAAKtE,UAAU,YACf,qCAAWpB,KAAKG,QAAQwF,iBAAxB,KACA,wBAAI1E,MAAO,CAAC2E,SAAU,OAAQC,UAAW,WAAY7F,KAAKF,MAAM+C,UAChE,6BAEA,yBAAKiD,IAAK9F,KAAKF,MAAMiD,MAAOgD,OAAO,MAAMC,MAAM,MAAMC,IAAI,MAIzD,gCAEA,4BAAQ7E,UAAU,cAAcD,QAAS,kBAAI,EAAKlB,SAAS,CAACyC,WAAW,EAAK5C,MAAM4C,cAAlF,QACC1C,KAAKkG,YAAYtF,KAAKZ,KAAtBA,IAGD,yBAAKoB,UAAU,UACP,yBAAKA,UAAU,OACX,uCAEJ,0BAAMmD,OAAO,OAAOM,GAAG,cAAcC,SAAU9E,KAAKkD,qBAE5C,yBAAK9B,UAAU,8BACf,2BAAO+E,SAAU,SAAC3E,GAAD,OAAS,EAAKvB,SAAS,CAAC+C,OAAOxB,EAAM2D,OAAOE,SAASA,MAAOrF,KAAKF,MAAMkD,OAAQoD,KAAK,OAAOhF,UAAU,eAAeyD,GAAG,SAASwB,YAAY,eAAeC,KAAK,SAErL,4BAAStB,SAAqC,IAA3BhF,KAAKF,MAAMkD,OAAOuD,QAAcvG,KAAKF,MAAM8C,UAAWxB,UAAU,eAAegF,KAAK,SAASE,KAAK,SAASjB,MAAM,UAAUrF,KAAKwG,YAAY5F,KAAKZ,KAAtBA,MAK1J,gCACI,uBAAGoB,UAAU,uBAAuBD,QAAS,kBAAI,EAAKsF,aAAa7F,KAAK,EAAvB,KAAjD,UACCZ,KAAK0G,YAAY9F,KAAKZ,KAAtBA,KAUL,yBAAKoB,UAAU,YACX,4BAAKpB,KAAKF,MAAMmD,SAChB,gC,+BAkBhB,OACQ,yBAAK4B,GAAG,QACR,yBAAKzD,UAAU,aACX,yBAAKA,UAAU,YAEX,yBAAKA,UAAU,yCACf,yBAAKA,UAAU,gBAAgBH,MAAO,CAACe,QAAS,KAC3ChC,KAAK2G,gBAAgB/F,KAAKZ,KAA1BA,KAIT,yBAAKoB,UAAU,sBACX,kBAAC,EAAD,a,GAxVcS,aAmWtCW,EAASoE,YAAYlF,E,YCpXAmF,E,kDAEjB,WAAYhH,GACX,IAAD,8BACI,cAAMA,IACDC,MAAM,CACPgH,KAAK,EAAKjH,MAAMiH,MAHxB,E,qDAWI,IAFH,IAAD,OACQC,EAAM,GADd,WAEYC,GAEJD,EAAME,KACN,kBAACC,EAAA,EAAWC,KAAZ,CAAiBC,OAAUJ,IAAI,EAAKnH,MAAMiH,KAAM3F,QAAS,kBAAI,EAAKtB,MAAMwH,WAAWL,IAAIM,IAAKN,GACvFA,KAJDA,EAAE,EAAEA,GAAGhH,KAAKH,MAAM0H,gBAAgBP,IACzC,EADOA,GASR,OACI,kBAACE,EAAA,EAAD,CAAY9F,UAAU,0BACjB2F,O,GAzB6BlF,a,2JCM9C,IAAMS,EAAWC,cAAH,KAOOiF,E,kDAGjB,WAAY3H,GACX,IAAD,8BACI,cAAMA,IACDC,MAAM,CACP6C,UAAS,EACT8E,YAAY,GACZX,KAAK,GAET,EAAKY,gBAAgB,GAPzB,E,gEAWC,IAAD,OACIvE,MAAM,oBACLC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKtD,SAAS,CACVwH,YAAYlE,EAAKkE,YACjB9E,UAAS,OAGhBa,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,Q,kCAKlBqD,GAER9G,KAAKC,SAAS,CAAC6G,KAAKA,M,0CAIvB,IAAD,OACI,GAAG9G,KAAKF,MAAM6C,SAEV,OACI,kBAAC,IAAD,CAAaJ,IAAKD,IAMtB,IAAImF,EAAYzH,KAAKF,MAAM2H,YAAYE,KAAI,SAACC,EAAOC,GAC/C,OAAID,EAAOE,sBAAsB,EAAK3H,QAAQ2H,oBAGtC,wBAAIR,IAAKO,GACL,4BAAKA,EAAM,GAEX,4BAAKD,EAAOE,qBACZ,4BAAKF,EAAOhG,SAQhB,wBAAIR,UAAU,eAAekG,IAAKO,GAC9B,4BAAKA,EAAM,GAEX,4BAAKD,EAAOE,qBACZ,4BAAKF,EAAOhG,YAQ5B,OAFA6F,EAAYA,EAAYM,OAAO/H,KAAKF,MAAMgH,KAAK,GAAG9G,KAAK0H,iBAAiB1H,KAAKF,MAAMgH,KAAK,GAAG9G,KAAK0H,gBAAgB1H,KAAK0H,iBAGjH,yBAAKtG,UAAU,oBACf,2BAAOA,UAAU,SAEb,2BAAOA,UAAU,cACP,4BACM,wBAAIiB,MAAM,OAAV,QAEA,wBAAIA,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,YAIhB,+BACKoF,IAIT,yBAAKrG,UAAU,eACC,kBAAC,EAAD,CAAkBiG,WAAYrH,KAAKgI,YAAYpH,KAAKZ,MAAO8G,KAAM9G,KAAKF,MAAMgH,KAAMS,gBAAiBvH,KAAKF,MAAM2H,YAAYlB,OAAOvG,KAAK0H,sB,0CAWjK,IAAD,OAEI1H,KAAKC,SAAS,CACV0C,UAAS,EACT8E,YAAY,KACd,WACEtE,MAAM,oBACLC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKtD,SAAS,CACVwH,YAAYlE,EAAKkE,YACjB9E,UAAS,OAShBa,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,W,+BAMjC,IAAD,OACI,OACI,yBAAKoB,GAAG,OAAOzD,UAAU,QACrB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,4BAA4BH,MAAO,CAACe,QAAS,KACxD,4BAAQZ,UAAU,8BAA8BD,QAAS,kBAAI,EAAK8G,sBAAqB,yCACtFjI,KAAKkI,kBAAkBtH,KAAKZ,KAA5BA,Y,GA1IY6B,aA4JzC2F,EAAYZ,YAAYlF,ECzKxB,IA2DeyG,EA3DG,WAGV,OAEI,yBAAKtD,GAAG,OAAOzD,UAAU,QACzB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,4BAA4BH,MAAO,CAACe,QAAS,KAC5D,yBAAKZ,UAAU,oBACf,2BAAOA,UAAU,SAEb,2BAAOA,UAAU,cACX,4BACM,wBAAIiB,MAAM,OAAV,QAEA,wBAAIA,MAAM,OAAV,oBAKZ,+BACI,4BACI,2CACA,4BAAI,uBAAGjB,UAAU,eAAeG,KAAK,qDAAjC,2BAGR,4BACI,8CACA,4BAAI,uBAAGH,UAAU,eAAeG,KAAK,qDAAjC,oCCSrB6G,EAxCF,WAET,OACI,yBAAKvD,GAAG,OAAOzD,UAAU,QACrB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BAA4BH,MAAO,CAACe,QAAS,KACxD,yBAAKZ,UAAU,oBAEf,wBAAIH,MAAO,CAACoH,cAAc,WAAW,sFACtD,mFACA,kGACC,sFACA,uJACA,yGACA,wFACA,wJ,oSCGSC,E,kDAEjB,WAAYzI,GACX,IAAD,8BACI,cAAMA,IACDC,MAAM,CACPyI,SAAQ,EACRC,WAAW,GACXC,UAAU,GACVX,oBAAoB,GACpBY,MAAM,GACNC,MAAM,GACN/G,OAAO,GACP+D,iBAAiB,GACjB/B,MAAM,GACNa,KAAK,EAAKmE,UAAU,cAIxB,EAAKC,oBAAoB,EAAKA,oBAAoBjI,KAAzB,gBACzB,EAAK4E,cAAc,EAAKA,cAAc5E,KAAnB,gBACnB,EAAKgE,SAAS,EAAKA,SAAShE,KAAd,gBAlBlB,E,sDAqBU0F,GACN,IAAIwC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BlC,EAAI,EAAGA,EAAIiC,EAAQ1C,OAAQS,IAAK,CACrC,IAAMgC,EAASC,EAAQjC,GAAGmC,OAE1B,GAAIH,EAAOI,UAAU,EAAG9C,EAAKC,OAAS,KAAQD,EAAO,IAAM,CACvDwC,EAAcO,mBAAmBL,EAAOI,UAAU9C,EAAKC,OAAS,IAChE,OAIZ,OAAOuC,I,0CAIV,IAAD,OACI3F,MAAM,2BACLC,MAAK,SAACkG,GAAD,OAAYA,EAAShG,UAC1BF,MAAK,SAACE,GACH,EAAKrD,SAAS,CACVuI,WAAWlF,EAAKkF,WAChBC,UAAUnF,EAAKmF,UACfX,oBAAoBxE,EAAKwE,oBACzBY,MAAMpF,EAAKoF,MACXC,MAAMrF,EAAKqF,MACX/G,OAAO0B,EAAK1B,OACZ+D,iBAAiBrC,EAAKqC,iBACtB/B,MAAMN,EAAKM,MACX2E,SAAQ,EACR5D,cAAc,EAAKkE,oBACnBrD,cAAc,EAAKA,cACnBZ,SAAS,EAAKA,cAIrBpB,OAAM,SAACC,GAAD,OAAO8F,MAAM9F,Q,4CAKpBzD,KAAKC,UAAS,SAACC,GACX,MAAM,CACFyF,iBAAiBzF,EAAKyF,iBAAiB,Q,oCAKrC/D,GAEV5B,KAAKC,SAAS,CAAC2B,OAAOA,M,+BAGjBgC,GAEL5D,KAAKC,SAAS,CAAC2D,MAAMA,M,+BAOrB,IAAMtB,EAAWC,cAAH,KAYd,OAAKvC,KAAKF,MAAMyI,QAmBd,yBAAKhG,IAAKD,GACR,kBAAC,IAAD,CAAYC,IAAKD,EACnBkH,KAAM,IACNrH,MAAO,WApBG,kBAACT,EAAa+H,SAAd,CAAuBpE,MAAOrF,KAAKF,OAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,SAAD,KACI,kBAAC,QAAD,CAAOwB,OAAK,EAACoI,KAAK,SAASC,OAAQ,SAAC9J,GAAD,OAAS,kBAAC,EAAaA,MAC1D,kBAAC,QAAD,CAAOyB,OAAK,EAACoI,KAAK,oBAAoBC,OAAQ,SAAC9J,GAAD,OAAS,kBAAC,EAAgBA,MACxE,kBAAC,QAAD,CAAOyB,OAAK,EAACoI,KAAK,aAAaC,OAAQ,SAAC9J,GAAD,OAAU,kBAAC+J,EAAD,SACjD,kBAAC,QAAD,CAAOtI,OAAK,EAACoI,KAAK,cAAcC,OAAQ,kBAAI,kBAAC,EAAD,SAC5C,kBAAC,WAAD,CAAU9I,GAAG,iB,GA7GRgB,aCZbgI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJpB,SAASqB,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnH,MAAK,SAAAoH,GACJA,EAAaC,gBAEdjH,OAAM,SAAAkH,GACLhH,QAAQgH,MAAMA,EAAMzH,c","file":"static/js/main.cd5fc73a.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst UserContext=React.createContext();\n\n\nexport default UserContext;\n","import React, { Component } from 'react';\nimport {Navbar as BootstrapNav} from 'react-bootstrap';\nimport UserProvider from '../providers/UserProvider'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport {NavLink} from 'react-router-dom';\n\nexport default class Navbar extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            expanded:false\n        }\n    }\n\n    toggleNav()\n    {\n        this.setState((prev)=>{\n            return {expanded:!prev.expanded}\n        })\n    }\n\n    renderUsername(context)\n    {\n        return (\n            <span>\n                {context.username}\n            </span>\n        );\n    }\n    render()\n    {\n        return(\n\n            <BootstrapNav sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" expanded={this.state.expanded} onToggle={()=>this.toggleNav.bind(this)()}>\n                <Link to=\"/game/\">\n                <BootstrapNav.Brand>ᑌᑎᒪOᑕKᗩTᕼOᑎ </BootstrapNav.Brand>\n                </Link>\n\n                <BootstrapNav.Toggle/>\n                \n                <BootstrapNav.Collapse  style={{float:'right'}} onClick={()=>this.toggleNav.bind(this)()}>\n                    \n                        <ul className=\"nav navbar-nav ml-auto navbar-left\">\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\" exact to=\"/game/\" className=\"nav-link\">GAME</NavLink>\n                        \n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\"  exact to=\"/game/rules\" className=\"nav-link\">RULES</NavLink>\n                        \n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\"  exact to=\"/game/leaderboard\"  className=\"nav-link\">LEADERBOARD</NavLink>\n                        \n                        </li>\n                        </ul>\n                        <ul className=\"nav navbar-nav navbar-right\">\n                        <li className=\"nav-item\">\n                        <a  href=\"/logout\"  className=\"nav-link\"  >LOGOUT</a>\n                        </li>\n                    </ul>\n                    <ul className=\"nav navbar-nav ml-auto navbar-right\">\n                        <li className=\"nav-item\">\n                        <a href=\"/\" onClick={(event)=>event.preventDefault()} className=\"nav-link\" >\n                            <UserProvider.Consumer>\n                                {(context)=><span>YOUR SCORE: {context.points}</span>}\n                            </UserProvider.Consumer>\n                        </a>\n                        </li>\n                        {/* <a  href=\"/\" className=\"nav-link blink\" >OTHER EVENTS</a> */}\n                        <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\"  exact to=\"/contactus\"  className=\"nav-link\">CONTACT US</NavLink>\n                        </li>\n                    </ul>\n                \n           </BootstrapNav.Collapse>\n\n\n            </BootstrapNav>\n\n        );\n    }\n}","import React from 'react'\n\n\n const Advertisement =()=>\n{\n        return(\n            <div style={{backgroundColor: '#26292b', opacity: 1}}>\n                <div className=\"demo-1\">\n                <marquee behavour=\"scroll\" direction=\"left\" style={{color:'white'}}><h3>Celebrating <span style={{color: '#f4cf5d'}}>#10YearsofISTE</span>, Manipal's Largest Multi-domain Club. ISTE and IE-E&C Collab present Crucible'20</h3></marquee>\n                </div>\n            </div>\n        );\n \n\n}\n\nexport default Advertisement;","import React, { Component } from 'react';\n\nclass Events extends Component\n{\n    render()\n    {\n        return(\n            <div className=\"col-lg-4 col-md-4 col-sm-12 col-xs-12\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 col-md-12 col-lg-12 col-xs-12 table1\" style={{opacity: 0.7}}>\n                  <h3 className=\"text-center\">Other Events</h3>\n                  \n                      <table className=\"table\">\n                          <thead className=\"thead-dark\">\n                              <tr>\n                                    <th scope=\"col\">Event</th>\n                                    <th scope=\"col\">Classroom and Days</th>\n                              </tr>\n                            </thead>\n\n                            <tbody>\n                                <tr>\n                                    <td>Codeburst</td>\n                                    <td>AB5 403 24th January</td>\n                                </tr>\n                                <tr className=\"pure-table-odd\">\n                                    <td>Rig-It-Up</td>\n                                    <td>AB5 403 25th January</td>\n                                </tr>\n                                <tr>\n                                    <td>Exquizite</td>\n                                    <td>AB5 406 22nd January & 23rd January</td>\n                                </tr>\n                                <tr className=\"pure-table-odd\">\n                                    <td>Lazertron</td>\n                                    <td>AB5 403 22nd January</td>\n                                </tr>\n\n                <tr>\n                <td>Treasure Trove</td>\n                <td>AB5 406 24th January & 26th January</td>\n              </tr>\n\n                <tr className=\"pure-table-odd\">\n                <td>Gaming</td>\n                <td>AB5 407 23rd January to 25th January</td>\n              </tr>\n                            </tbody>\n\n                      </table>\n                  \n              </div>\n             </div>\n          </div>\n        );\n    }\n}\n\nexport default Events;","import React, { Component } from 'react'\nimport Events from './Events';\nimport UserProvider from '../providers/UserProvider'\nimport PulseLoader from 'react-spinners/PulseLoader';\n\n\nimport { css } from \"@emotion/core\";\nimport Swal from 'sweetalert2';\n\n\nconst override = css`\n  display: block;\n  text-align: center;\n  border-color: red;\n  margin-top:25px;\n`;\n\n\n\n\nexport default class Question extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            stuck_open:false,\n            hint_open:false,\n            fetching:true,\n            submitted:false,\n            question:'',\n            hint:'',\n            image:'',\n            answer:'',\n            message:'',\n        }\n\n        this.answerSubmitHandler=this.answerSubmitHandler.bind(this);\n        \n    }\n\n    componentDidMount()\n    {\n        fetch(`/api/get_question`)\n        .then((res)=>res.json())\n        .then((data)=>{\n            if(data.question)\n            {\n                this.setState({\n                    question:data.question.question,\n                    hint:data.question.hint,\n                    image:data.question.image,\n                    fetching:false\n                })\n            }\n            else\n            {\n\n                this.setState({\n                    question:null,\n                    hint:null,\n                    image:null,\n                    message:data.message,\n                    fetching:false\n                })\n\n            }\n        })\n        .catch((err)=>console.log(err));\n    }\n\n    toggle_stuck()\n    {\n        this.setState((prev)=>{\n            return {\n                stuck_open:!prev.stuck_open\n            }\n        })\n    }\n\n    skip()\n    {\n        if(this.context.skips>0)\n        {    Swal.fire({\n                title: 'Are you sure you want to skip this question ?',\n                text: \"You won't get any points for if you do so!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: 'Yes'\n            })\n            .then((res)=>{\n                if(res.isConfirmed)\n                {\n                    fetch('/api/skip',{\n                        method:'POST',\n                        headers:{'X-CSRFToken':this.context.csrf}\n                    })\n                    .then((resp)=>resp.json())\n                    .then((data)=>{\n                        if(data.next_question)\n                        {\n                            let question=data.next_question;\n                            this.setState({\n                                question:question.question,\n                                hint:question.hint,\n                                image:question.image\n            \n                            },()=>{\n                                this.context.setSkips(data.skips);\n                                this.context.next_question();\n                            })\n            \n            \n                        }\n            \n                        else\n                        {\n                            console.log(data);\n                            this.setState({\n                                question:null,\n                                hint:null,\n                                image:null,\n                                message:data.message\n                            },()=>{\n                                this.context.setSkips(data.skips);\n                                this.context.next_question();\n                            })\n                        }\n                    })\n\n                }\n            });\n        }\n\n        else\n        {\n            Swal.fire({\n                title:'Oops, You do not have enough skips remaining!',\n                icon:'error'\n            })\n        }\n        \n    }\n\n        \n\n        render_skip()\n        {\n                if (this.state.stuck_open)\n                {\n                    return (\n                        <form id=\"skip_form\" onSubmit={(event)=>event.preventDefault()}>\n                                {/* {%csrf_token%} */}\n                    \n                        \n                            <button className=\"btn btn-danger\" onClick={()=>this.skip()} disabled={this.state.submitted || this.context.skips===0}>\n                                \n                            <span>{this.context.skips} skips remaining</span>\n                            \n                            </button>\n                        \n                        \n                        </form>\n                    );\n                }\n                else{\n                    return(\n                        <div>\n                        \n                        </div>\n                    );\n                }\n    }\n\n    render_hint()\n    {\n        if(this.state.hint_open)\n        {\n            return(\n                <div id=\"hint\" >\n                    <h4 style={{color: 'black'}}>{this.state.hint}</h4>\n                    <br />  \n                </div>\n            );\n        }\n\n        else\n        {\n            return(\n                <div></div>\n            );\n        }\n    }\n\n    answerSubmitHandler(event)\n    {\n        event.preventDefault();\n        this.setState({submitted:true});\n        let data=new FormData();\n\n        data.append('answer',event.target.ans.value);\n\n        fetch('/api/check_answer',{\n            method:'POST',\n            body:data,\n            headers:{'X-CSRFToken':this.context.csrf}\n        })\n        .then((res)=>res.json())\n        .then((data)=>{\n            if(data.status==='correct')\n            {\n                \n                \n                Swal.fire({\n                    title:'Correct Answer!',\n                    icon:'success',\n\n                })\n                .then(()=>{\n                    if(data.next_question!=null)\n                    {\n                        this.context.next_question();\n                        this.context.update_points(data.points);\n\n                        this.setState({\n                            question:data.next_question.question,\n                            hint:data.next_question.hint,\n                            image:data.next_question.image,\n                            answer:'',\n                            submitted:false\n                        })\n                    }\n\n                    else\n                    {\n                        this.context.next_question();\n                        this.context.update_points(data.points);\n\n                        this.setState({\n                            question:null,\n                            hint:null,\n                            image:null,\n                            answer:null,\n                            message:data.message,\n                            submitted:false\n                        })\n                    \n                    }\n\n                })\n                \n                \n            }\n            else if(data.status==='wrong')\n            {\n                Swal.fire({\n                    title:'Wrong Answer!',\n                    icon:'error',\n                })\n                this.setState({submitted:false});\n            }\n            else\n            {\n                Swal.fire({\n                    title:data.status,\n                    icon:'warning',\n                    footer:'Please contact the organizers to report the error'\n                })\n            }\n        })\n        .catch((err)=>console.log(err));\n\n    }\n\n    button_text()\n    {\n    \n            if(this.state.submitted) return (<span>CHECKING</span>);\n            else return (<span>SUBMIT</span>);\n    }\n\n    render_question()\n    {\n        if(!this.state.fetching)\n        {\n            if(this.state.question)\n            {    \n                return(\n                    <React.Fragment>\n                    <div className=\"question\">\n                    <h2>Level {this.context.current_question} </h2>\n                    <h4 style={{fontSize: '22px', textAlign: 'center'}}>{this.state.question}</h4>\n                    <br/>\n                    \n                    <img src={this.state.image} height='200' width='200' alt=''/>\n                        \n                                                \n                    </div>\n                    <center>\n                                    \n                    <button className=\"button mt-2\" onClick={()=>this.setState({hint_open:!this.state.hint_open})}>HINT</button>\n                    {this.render_hint.bind(this)()}\n                    \n                    </center>\n                    <div className=\"answer\">\n                            <div className=\"ans\">\n                                <h2>Answer</h2>\n                            </div>\n                            <form method=\"POST\" id=\"answer_form\" onSubmit={this.answerSubmitHandler}>\n                                    \n                                    <div className=\"form-group field col-lg-12\">\n                                    <input onChange={(event)=>this.setState({answer:event.target.value})} value={this.state.answer} type=\"text\" className=\"form-control\" id=\"answer\" placeholder=\"Enter Answer\" name=\"ans\"/>\n                                </div>\n                                <button  disabled={this.state.answer.length===0 || this.state.submitted} className=\"btn btn-info\" type=\"submit\" name=\"submit\" value=\"SUBMIT\">{this.button_text.bind(this)()}</button>\n                            </form>\n                                            \n                                    {/* <!-- <button type=\"submit\" className=\"btn btn-default\" ><b>Submit</b></button> --> */}\n                    </div>\n                    <center>\n                        <p className=\"btn btn-primary mt-2\" onClick={()=>this.toggle_stuck.bind(this)()}>Stuck?</p>\n                        {this.render_skip.bind(this)()}\n                    </center>\n                    </React.Fragment>\n            \n                );\n            }\n\n            else\n            {\n                return(\n                    <div className=\"question\">\n                        <h2>{this.state.message}</h2>\n                        <br/>\n                    </div>\n                );\n            }\n        }\n\n        else\n        {\n            return (\n                <div>\n                    <PulseLoader css={override}/>\n\n                </div>\n            );\n        }\n    }\n    render()\n    {\n        return(\n                <div id=\"main\">\n                <div className=\"container\">\n                    <div className=\"row row1\">\n                        {/* <!-- <div className=\"col-lg-2 col-md-2\"></div> --> */}\n                        <div className=\"col-lg-7 col-md-7 col-sm-12 col-xs-12\">\n                        <div className=\"question-back\" style={{opacity: 0.7}}>\n                            {this.render_question.bind(this)()}\n                        </div>\n                           \n                        </div>\n                    <div className=\"col-lg-1 col-md-1\"></div> \n                        <Events/>\n                \n                            \n                    </div>\n                </div>    \n            </div>\n            );\n\n    }\n}\n\nQuestion.contextType=UserProvider;","import React, { Component } from 'react';\nimport Pagination from 'react-bootstrap/Pagination'\n\nexport default class CustomPagination extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            page:this.props.page\n        }\n    }\n\n\n    render()\n    {\n        let items=[];\n        for(let i=1;i<=this.props.number_of_pages;i++)\n        {\n            items.push(\n            <Pagination.Item active = {i===this.props.page} onClick={()=>this.props.changePage(i)} key={i}>\n                {i}\n            </Pagination.Item>)\n        }\n\n\n        return(\n            <Pagination className=\"justify-content-center\">\n                {items}\n            </Pagination>\n        );\n    }\n}","import React, { Component } from 'react'\nimport UserProvider from '../providers/UserProvider'\n\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport { css } from \"@emotion/core\";\n\nimport CustomPagination from './Pagination';\n\n\nconst override = css`\n  display: block;\n  text-align: center;\n  border-color: red;\n  margin-top:25px;\n`;\n\nexport default class Leaderboard extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            fetching:true,\n            leaderboard:[],\n            page:1\n        }\n        this.NUMBER_OF_ITEMS=10;\n    }\n\n    componentDidMount()\n    {\n        fetch('/api/leaderboard')\n        .then((res)=>res.json())\n        .then((data)=>{\n            this.setState({\n                leaderboard:data.leaderboard,\n                fetching:false\n            })\n        })\n        .catch((err)=>console.log(err));\n        \n\n    }\n\n    change_page(page)\n    {\n        this.setState({page:page})\n    }\n\n    render_leaderbord()\n    {\n        if(this.state.fetching)\n        {\n            return(\n                <PulseLoader css={override}/>\n            );\n        }\n\n        else\n        {\n            let leaderboard=this.state.leaderboard.map((topper,index)=>{\n                if (topper.registration_number!==this.context.registration_number)\n                {\n                    return(\n                        <tr key={index}>\n                            <td>{index+1}</td>\n                            {/* <td>{topper.first_name} {topper.last_name}</td> */}\n                            <td>{topper.registration_number}</td>\n                            <td>{topper.points}</td>\n                        </tr>\n                    );\n                }\n                else\n                {\n                    \n                    return(\n                        <tr className=\"table-danger\" key={index}>\n                            <td>{index+1}</td>\n                            {/* <td>{topper.first_name} {topper.last_name}</td> */}\n                            <td>{topper.registration_number}</td>\n                            <td>{topper.points}</td>\n                        </tr>\n                    );\n                }\n            });\n\n            leaderboard=leaderboard.slice((this.state.page-1)*this.NUMBER_OF_ITEMS,(this.state.page-1)*this.NUMBER_OF_ITEMS+this.NUMBER_OF_ITEMS);\n\n            return(\n                <div className=\"table-responsive\">\n                <table className=\"table\">\n                    \n                    <thead className=\"thead-dark\">\n                              <tr>\n                                    <th scope=\"col\">Rank</th>\n                                    {/* <th scope=\"col\">Name</th> */}\n                                    <th scope=\"col\">Registration Number</th>\n                                    <th scope=\"col\">Points</th>\n                              </tr>\n                    </thead>\n\n                    <tbody>\n                        {leaderboard}\n                    </tbody>\n                    \n                </table>\n                <div className=\"text-center\">\n                                <CustomPagination changePage={this.change_page.bind(this)} page={this.state.page} number_of_pages={this.state.leaderboard.length/this.NUMBER_OF_ITEMS}/>\n                            </div>\n                \n                </div>\n\n            );\n\n        }\n    }\n\n    reloadLeaderboard()\n    {\n        \n        this.setState({\n            fetching:true,\n            leaderboard:[]\n        },()=>{\n            fetch('/api/leaderboard')\n            .then((res)=>res.json())\n            .then((data)=>{\n                this.setState({\n                    leaderboard:data.leaderboard,\n                    fetching:false\n                });\n\n                \n\n\n\n                \n            })\n            .catch((err)=>console.log(err));\n        })\n    }\n\n\n    render()\n    {\n        return(\n            <div id=\"main\" className=\"mt-4\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {/* <!-- <div className=\"col-lg-2 col-md-2\"></div> --> */}\n                        <div className=\"col-12 text-center\">\n                        <div className=\"question-back text-center\" style={{opacity: 0.7}}>\n                            <button className=\"btn btn-primary float-right\" onClick={()=>this.reloadLeaderboard()}><span>&#8634;</span></button>\n                            {this.render_leaderbord.bind(this)()}\n                            \n                        </div>\n                        \n                           \n                        </div>\n                        \n                            \n                    </div>\n                    \n                           \n                  \n                </div>\n                    \n            </div>\n        )\n    }\n}\nLeaderboard.contextType=UserProvider;","import React from 'react';\n\n\nconst ContactUs = ()=>\n{\n   \n        return(\n\n            <div id=\"main\" className=\"mt-4\">\n            <div className=\"container\">\n                <div className=\"row\">\n                   \n                    <div className=\"col-12 text-center\">\n                    <div className=\"question-back text-center\" style={{opacity: 0.7}}>\n                    <div className=\"table-responsive\">\n                    <table className=\"table\">\n                    \n                        <thead className=\"thead-dark\">\n                              <tr>\n                                    <th scope=\"col\">Name</th>\n                                    {/* <th scope=\"col\">Name</th> */}\n                                    <th scope=\"col\">Contact Number</th>\n                                   \n                              </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr>\n                                <td>Omkar Masur</td>\n                                <td><a className=\"btn btn-info\" href=\"https://api.WhatsApp.com/send?phone=+919930147279\">WhatsApp (9930147279)</a></td>\n                            </tr>\n\n                            <tr>\n                                <td>Shubham Pathak</td>\n                                <td><a className=\"btn btn-info\" href=\"https://api.WhatsApp.com/send?phone=+918130180208\">WhatsApp (8130180208)</a></td>\n                            </tr>\n                            \n                        </tbody>\n                    \n                    </table>\n                \n                    </div>\n                        \n                        \n                    </div>\n                    \n                       \n                    </div>\n                    \n                        \n                </div>\n                \n                       \n              \n            </div>\n                \n        </div>\n\n        );\n\n}\n\nexport default ContactUs;","import React from 'react';\n\n\nconst Rules =()=>{\n\n    return(\n        <div id=\"main\" className=\"mt-4\">\n            <div className=\"container\">\n                <div className=\"row\">\n                   \n                    <div className=\"col-12 text-center\">\n                        <div className=\"question-back text-center\" style={{opacity: 0.7}}>\n                            <div className=\"table-responsive\">\n\n                            <ul style={{listStyleType:'circle'}}><li>THE QUESTION DISPLAYED IS A CLUE TO A PLACE IN MANIPAL</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>YOUR ANSWER SHOULD BE THE NAME OF  PLACE IN MANIPAL</li>\n\t\t\t\t\t\t\t\t\t\t\t<li>THE FORMAT OF THE ANSWER IS EXACTLY THE SAME AS THE NAME ON GOOGLE</li>\n\t\t\t\t\t\t\t\t\t\t\t <li>YOU HAVE AN UNLIMTED NUMBER OF TRIES FOR EACH QUESTION</li>\n\t\t\t\t\t\t\t\t\t\t\t <li>YOU WILL BE PROVIDED WITH 3 SKIPS FOR 1st DAY IN CASE YOU GET STUCK ON SOME LEVEL WHICH WILL BE INCREASE EACH DAY BY 1.</li>\n\t\t\t\t\t\t\t\t\t\t\t <li>EVERYDAY NEW QUESTIONS WILL BE UPDATED SO KEEP CHECKING FOR NEW QUESTIONS</li> \n\t\t\t\t\t\t\t\t\t\t\t <li>THE ORDER OF QUESTIONS APPEARING FOR EACH PLAYER IS SAME</li> \n\t\t\t\t\t\t\t\t\t\t\t <li>THE EVENT WILL BE LIVE TILL SUNDAY  26TH JAN NIGHT. WINNERS WILL BE CONTACTED ON THEIR CONTACT DETAILS PROVIDED.</li></ul>\n                                \n                            </div>\n                            \n                            \n                        </div>\n                        \n                       \n                    </div>\n                    \n                        \n                </div>\n                \n                       \n              \n            </div>\n                \n        </div>\n    );\n\n}\n\nexport default Rules;","import React, { Component } from 'react';\nimport PuffLoader from 'react-spinners/PuffLoader';\nimport { css } from \"@emotion/core\";\nimport {Switch,Route} from 'react-router-dom'\n\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/css/home.css';\nimport './assets/others.css'\n\nimport Navbar from './components/Navbar'\nimport Advertisement from './components/Advertisement';\nimport Question from './components/Question';\nimport Leaderboard from './components/Leaderboard'\nimport Contactus from './components/Contactus';\nimport Rules from './components/Rules';\n\nimport UserProvider from './providers/UserProvider';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\n\n\n\n\n\nexport default class App extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            loading:true,\n            first_name:'',\n            last_name:'',\n            registration_number:'',\n            email:'',\n            phone:'',\n            points:'',\n            current_question:'',\n            skips:'',\n            csrf:this.getCookie('csrftoken')\n\n        }\n\n        this.go_to_next_question=this.go_to_next_question.bind(this);\n        this.update_points=this.update_points.bind(this);\n        this.setSkips=this.setSkips.bind(this);\n    }\n\n    getCookie(name) {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    componentDidMount()\n    {\n        fetch('/api/get_logged_in_user')\n        .then((response)=>response.json())\n        .then((json)=>{\n            this.setState({\n                first_name:json.first_name,\n                last_name:json.last_name,\n                registration_number:json.registration_number,\n                email:json.email,\n                phone:json.phone,\n                points:json.points,\n                current_question:json.current_question,\n                skips:json.skips,\n                loading:false,\n                next_question:this.go_to_next_question,\n                update_points:this.update_points,\n                setSkips:this.setSkips\n\n            })\n        })\n        .catch((err)=>alert(err))\n    }\n\n    go_to_next_question()\n    {\n        this.setState((prev)=>{\n            return{\n                current_question:prev.current_question+1\n            }\n        })\n    }\n\n    update_points(points)\n    {\n        this.setState({points:points});\n    }\n\n    setSkips(skips)\n    {\n        this.setState({skips:skips});\n    }\n\n\n\n    render()\n    {\n        const override = css`\n        position: fixed;\n        z-index: 999;\n        height: 2em;\n        width: 2em;\n        overflow: visible;\n        margin: auto;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n`;\n        if (!this.state.loading){\n            return(\n                    <UserProvider.Provider value={this.state}>\n                        <Navbar/>\n                        <Advertisement/>\n                        <Switch>\n                            <Route exact path=\"/game/\" render={(props)=><Question {...props}/>}/>\n                            <Route exact path=\"/game/leaderboard\" render={(props)=><Leaderboard {...props}/>} />\n                            <Route exact path=\"/contactus\" render={(props)=> <Contactus/>}/>\n                            <Route exact path=\"/game/rules\" render={()=><Rules/>}/>\n                            <Redirect to=\"/game/\"/>\n                        </Switch>\n                    </UserProvider.Provider> \n                    \n            );\n        }\n\n        return(\n            \n          <div css={override}>\n            <PuffLoader css={override}\n          size={100}\n          color={\"white\"}/>\n          </div>\n\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\n\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}